name: Build and test Nim

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os: [ubuntu-latest, windows-latest, macos-latest]
          
    steps:
    - uses: actions/checkout@v1
    - name: Cache choosenim
      id: cache-choosenim
      uses: actions/cache@v1
      with:
        path: ~/.choosenim
        key: ${{ runner.os }}-choosenim-stable
        
    - name: Cache nimble
      id: cache-nimble
      uses: actions/cache@v1
      with:
        path: ~/.nimble
        key: ${{ runner.os }}-nimble-stable
    - uses: jiro4989/setup-nim-action@v1
      with:
        nim-version: 1.6.0
        
    - name: Linux Build
      if: runner.os == 'Linux'
      run: |
        nimble build -d:release -d:ssl --threads:on -Y --verbose
        zip --junk-paths erocoolAPI erocoolAPI_${{ runner.os }}${{ steps.create_build.outputs.current_tag }}.zip

    - name: Windows Build
      if: runner.os == 'Windows'
      run: |
        nimble build -d:release -d:ssl --threads:on -Y --verbose
        powershell Compress-Archive -Path erocoolAPI.exe -DestinationPath erocoolAPI_${{ runner.os }}${{ steps.create_build.outputs.current_tag }}.zip

    - name: macOS Build
      if: runner.os == 'macOS'
      run: |
        nimble build -d:release -d:ssl --threads:on -Y --verbose
        zip --junk-paths erocoolAPI erocoolAPI_${{ runner.os }}${{ steps.create_build.outputs.current_tag }}.zip

    - name: Test
      run: nimble test -d:release -d:ssl --threads:on -Y --verbose
      
  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - id: create-release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
  upload-release-asset:
    strategy:
      matrix:
          os: [ubuntu-latest, windows-latest, macos-latest]
    needs: [create-release]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./erocoolAPI_${{ runner.os }}${{ steps.create_build.outputs.current_tag }}.zip
        asset_name: erocoolAPI_${{ runner.os }}${{ steps.create_build.outputs.current_tag }}.zip
        asset_content_type: application/zip